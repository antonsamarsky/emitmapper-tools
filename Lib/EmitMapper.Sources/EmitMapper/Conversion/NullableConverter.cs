
// autogenerated
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace EmitMapper.Conversion
{
	public class NullableConverter
	{
		public static Boolean? ToBoolean(Object par) { return par == null ? (Boolean?)null : Convert.ToBoolean(par); }
		public static Boolean? ToBoolean(Boolean par) { return Convert.ToBoolean(par); }
		public static Boolean ToBoolean(Boolean? par) { return Convert.ToBoolean(par.Value); }
		public static Boolean? ToBoolean(SByte par) { return Convert.ToBoolean(par); }
		public static Boolean ToBoolean(SByte? par) { return Convert.ToBoolean(par.Value); }
		public static Boolean? ToBoolean(Char par) { return Convert.ToBoolean(par); }
		public static Boolean ToBoolean(Char? par) { return Convert.ToBoolean(par.Value); }
		public static Boolean? ToBoolean(Byte par) { return Convert.ToBoolean(par); }
		public static Boolean ToBoolean(Byte? par) { return Convert.ToBoolean(par.Value); }
		public static Boolean? ToBoolean(Int16 par) { return Convert.ToBoolean(par); }
		public static Boolean ToBoolean(Int16? par) { return Convert.ToBoolean(par.Value); }
		public static Boolean? ToBoolean(UInt16 par) { return Convert.ToBoolean(par); }
		public static Boolean ToBoolean(UInt16? par) { return Convert.ToBoolean(par.Value); }
		public static Boolean? ToBoolean(Int32 par) { return Convert.ToBoolean(par); }
		public static Boolean ToBoolean(Int32? par) { return Convert.ToBoolean(par.Value); }
		public static Boolean? ToBoolean(UInt32 par) { return Convert.ToBoolean(par); }
		public static Boolean ToBoolean(UInt32? par) { return Convert.ToBoolean(par.Value); }
		public static Boolean? ToBoolean(Int64 par) { return Convert.ToBoolean(par); }
		public static Boolean ToBoolean(Int64? par) { return Convert.ToBoolean(par.Value); }
		public static Boolean? ToBoolean(UInt64 par) { return Convert.ToBoolean(par); }
		public static Boolean ToBoolean(UInt64? par) { return Convert.ToBoolean(par.Value); }
		public static Boolean? ToBoolean(String par) { return par == null ? (Boolean?)null : Convert.ToBoolean(par); }
		public static Boolean? ToBoolean(Single par) { return Convert.ToBoolean(par); }
		public static Boolean ToBoolean(Single? par) { return Convert.ToBoolean(par.Value); }
		public static Boolean? ToBoolean(Double par) { return Convert.ToBoolean(par); }
		public static Boolean ToBoolean(Double? par) { return Convert.ToBoolean(par.Value); }
		public static Boolean? ToBoolean(Decimal par) { return Convert.ToBoolean(par); }
		public static Boolean ToBoolean(Decimal? par) { return Convert.ToBoolean(par.Value); }
		public static Boolean? ToBoolean(DateTime par) { return Convert.ToBoolean(par); }
		public static Boolean ToBoolean(DateTime? par) { return Convert.ToBoolean(par.Value); }
		public static Char? ToChar(Object par) { return par == null ? (Char?)null : Convert.ToChar(par); }
		public static Char? ToChar(Boolean par) { return Convert.ToChar(par); }
		public static Char ToChar(Boolean? par) { return Convert.ToChar(par.Value); }
		public static Char? ToChar(Char par) { return Convert.ToChar(par); }
		public static Char ToChar(Char? par) { return Convert.ToChar(par.Value); }
		public static Char? ToChar(SByte par) { return Convert.ToChar(par); }
		public static Char ToChar(SByte? par) { return Convert.ToChar(par.Value); }
		public static Char? ToChar(Byte par) { return Convert.ToChar(par); }
		public static Char ToChar(Byte? par) { return Convert.ToChar(par.Value); }
		public static Char? ToChar(Int16 par) { return Convert.ToChar(par); }
		public static Char ToChar(Int16? par) { return Convert.ToChar(par.Value); }
		public static Char? ToChar(UInt16 par) { return Convert.ToChar(par); }
		public static Char ToChar(UInt16? par) { return Convert.ToChar(par.Value); }
		public static Char? ToChar(Int32 par) { return Convert.ToChar(par); }
		public static Char ToChar(Int32? par) { return Convert.ToChar(par.Value); }
		public static Char? ToChar(UInt32 par) { return Convert.ToChar(par); }
		public static Char ToChar(UInt32? par) { return Convert.ToChar(par.Value); }
		public static Char? ToChar(Int64 par) { return Convert.ToChar(par); }
		public static Char ToChar(Int64? par) { return Convert.ToChar(par.Value); }
		public static Char? ToChar(UInt64 par) { return Convert.ToChar(par); }
		public static Char ToChar(UInt64? par) { return Convert.ToChar(par.Value); }
		public static Char? ToChar(String par) { return par == null ? (Char?)null : Convert.ToChar(par); }
		public static Char? ToChar(Single par) { return Convert.ToChar(par); }
		public static Char ToChar(Single? par) { return Convert.ToChar(par.Value); }
		public static Char? ToChar(Double par) { return Convert.ToChar(par); }
		public static Char ToChar(Double? par) { return Convert.ToChar(par.Value); }
		public static Char? ToChar(Decimal par) { return Convert.ToChar(par); }
		public static Char ToChar(Decimal? par) { return Convert.ToChar(par.Value); }
		public static Char? ToChar(DateTime par) { return Convert.ToChar(par); }
		public static Char ToChar(DateTime? par) { return Convert.ToChar(par.Value); }
		public static SByte? ToSByte(Object par) { return par == null ? (SByte?)null : Convert.ToSByte(par); }
		public static SByte? ToSByte(Boolean par) { return Convert.ToSByte(par); }
		public static SByte ToSByte(Boolean? par) { return Convert.ToSByte(par.Value); }
		public static SByte? ToSByte(SByte par) { return Convert.ToSByte(par); }
		public static SByte ToSByte(SByte? par) { return Convert.ToSByte(par.Value); }
		public static SByte? ToSByte(Char par) { return Convert.ToSByte(par); }
		public static SByte ToSByte(Char? par) { return Convert.ToSByte(par.Value); }
		public static SByte? ToSByte(Byte par) { return Convert.ToSByte(par); }
		public static SByte ToSByte(Byte? par) { return Convert.ToSByte(par.Value); }
		public static SByte? ToSByte(Int16 par) { return Convert.ToSByte(par); }
		public static SByte ToSByte(Int16? par) { return Convert.ToSByte(par.Value); }
		public static SByte? ToSByte(UInt16 par) { return Convert.ToSByte(par); }
		public static SByte ToSByte(UInt16? par) { return Convert.ToSByte(par.Value); }
		public static SByte? ToSByte(Int32 par) { return Convert.ToSByte(par); }
		public static SByte ToSByte(Int32? par) { return Convert.ToSByte(par.Value); }
		public static SByte? ToSByte(UInt32 par) { return Convert.ToSByte(par); }
		public static SByte ToSByte(UInt32? par) { return Convert.ToSByte(par.Value); }
		public static SByte? ToSByte(Int64 par) { return Convert.ToSByte(par); }
		public static SByte ToSByte(Int64? par) { return Convert.ToSByte(par.Value); }
		public static SByte? ToSByte(UInt64 par) { return Convert.ToSByte(par); }
		public static SByte ToSByte(UInt64? par) { return Convert.ToSByte(par.Value); }
		public static SByte? ToSByte(Single par) { return Convert.ToSByte(par); }
		public static SByte ToSByte(Single? par) { return Convert.ToSByte(par.Value); }
		public static SByte? ToSByte(Double par) { return Convert.ToSByte(par); }
		public static SByte ToSByte(Double? par) { return Convert.ToSByte(par.Value); }
		public static SByte? ToSByte(Decimal par) { return Convert.ToSByte(par); }
		public static SByte ToSByte(Decimal? par) { return Convert.ToSByte(par.Value); }
		public static SByte? ToSByte(String par) { return par == null ? (SByte?)null : Convert.ToSByte(par); }
		public static SByte? ToSByte(DateTime par) { return Convert.ToSByte(par); }
		public static SByte ToSByte(DateTime? par) { return Convert.ToSByte(par.Value); }
		public static Byte? ToByte(Object par) { return par == null ? (Byte?)null : Convert.ToByte(par); }
		public static Byte? ToByte(Boolean par) { return Convert.ToByte(par); }
		public static Byte ToByte(Boolean? par) { return Convert.ToByte(par.Value); }
		public static Byte? ToByte(Byte par) { return Convert.ToByte(par); }
		public static Byte ToByte(Byte? par) { return Convert.ToByte(par.Value); }
		public static Byte? ToByte(Char par) { return Convert.ToByte(par); }
		public static Byte ToByte(Char? par) { return Convert.ToByte(par.Value); }
		public static Byte? ToByte(SByte par) { return Convert.ToByte(par); }
		public static Byte ToByte(SByte? par) { return Convert.ToByte(par.Value); }
		public static Byte? ToByte(Int16 par) { return Convert.ToByte(par); }
		public static Byte ToByte(Int16? par) { return Convert.ToByte(par.Value); }
		public static Byte? ToByte(UInt16 par) { return Convert.ToByte(par); }
		public static Byte ToByte(UInt16? par) { return Convert.ToByte(par.Value); }
		public static Byte? ToByte(Int32 par) { return Convert.ToByte(par); }
		public static Byte ToByte(Int32? par) { return Convert.ToByte(par.Value); }
		public static Byte? ToByte(UInt32 par) { return Convert.ToByte(par); }
		public static Byte ToByte(UInt32? par) { return Convert.ToByte(par.Value); }
		public static Byte? ToByte(Int64 par) { return Convert.ToByte(par); }
		public static Byte ToByte(Int64? par) { return Convert.ToByte(par.Value); }
		public static Byte? ToByte(UInt64 par) { return Convert.ToByte(par); }
		public static Byte ToByte(UInt64? par) { return Convert.ToByte(par.Value); }
		public static Byte? ToByte(Single par) { return Convert.ToByte(par); }
		public static Byte ToByte(Single? par) { return Convert.ToByte(par.Value); }
		public static Byte? ToByte(Double par) { return Convert.ToByte(par); }
		public static Byte ToByte(Double? par) { return Convert.ToByte(par.Value); }
		public static Byte? ToByte(Decimal par) { return Convert.ToByte(par); }
		public static Byte ToByte(Decimal? par) { return Convert.ToByte(par.Value); }
		public static Byte? ToByte(String par) { return par == null ? (Byte?)null : Convert.ToByte(par); }
		public static Byte? ToByte(DateTime par) { return Convert.ToByte(par); }
		public static Byte ToByte(DateTime? par) { return Convert.ToByte(par.Value); }
		public static Int16? ToInt16(Object par) { return par == null ? (Int16?)null : Convert.ToInt16(par); }
		public static Int16? ToInt16(Boolean par) { return Convert.ToInt16(par); }
		public static Int16 ToInt16(Boolean? par) { return Convert.ToInt16(par.Value); }
		public static Int16? ToInt16(Char par) { return Convert.ToInt16(par); }
		public static Int16 ToInt16(Char? par) { return Convert.ToInt16(par.Value); }
		public static Int16? ToInt16(SByte par) { return Convert.ToInt16(par); }
		public static Int16 ToInt16(SByte? par) { return Convert.ToInt16(par.Value); }
		public static Int16? ToInt16(Byte par) { return Convert.ToInt16(par); }
		public static Int16 ToInt16(Byte? par) { return Convert.ToInt16(par.Value); }
		public static Int16? ToInt16(UInt16 par) { return Convert.ToInt16(par); }
		public static Int16 ToInt16(UInt16? par) { return Convert.ToInt16(par.Value); }
		public static Int16? ToInt16(Int32 par) { return Convert.ToInt16(par); }
		public static Int16 ToInt16(Int32? par) { return Convert.ToInt16(par.Value); }
		public static Int16? ToInt16(UInt32 par) { return Convert.ToInt16(par); }
		public static Int16 ToInt16(UInt32? par) { return Convert.ToInt16(par.Value); }
		public static Int16? ToInt16(Int16 par) { return Convert.ToInt16(par); }
		public static Int16 ToInt16(Int16? par) { return Convert.ToInt16(par.Value); }
		public static Int16? ToInt16(Int64 par) { return Convert.ToInt16(par); }
		public static Int16 ToInt16(Int64? par) { return Convert.ToInt16(par.Value); }
		public static Int16? ToInt16(UInt64 par) { return Convert.ToInt16(par); }
		public static Int16 ToInt16(UInt64? par) { return Convert.ToInt16(par.Value); }
		public static Int16? ToInt16(Single par) { return Convert.ToInt16(par); }
		public static Int16 ToInt16(Single? par) { return Convert.ToInt16(par.Value); }
		public static Int16? ToInt16(Double par) { return Convert.ToInt16(par); }
		public static Int16 ToInt16(Double? par) { return Convert.ToInt16(par.Value); }
		public static Int16? ToInt16(Decimal par) { return Convert.ToInt16(par); }
		public static Int16 ToInt16(Decimal? par) { return Convert.ToInt16(par.Value); }
		public static Int16? ToInt16(String par) { return par == null ? (Int16?)null : Convert.ToInt16(par); }
		public static Int16? ToInt16(DateTime par) { return Convert.ToInt16(par); }
		public static Int16 ToInt16(DateTime? par) { return Convert.ToInt16(par.Value); }
		public static UInt16? ToUInt16(Object par) { return par == null ? (UInt16?)null : Convert.ToUInt16(par); }
		public static UInt16? ToUInt16(Boolean par) { return Convert.ToUInt16(par); }
		public static UInt16 ToUInt16(Boolean? par) { return Convert.ToUInt16(par.Value); }
		public static UInt16? ToUInt16(Char par) { return Convert.ToUInt16(par); }
		public static UInt16 ToUInt16(Char? par) { return Convert.ToUInt16(par.Value); }
		public static UInt16? ToUInt16(SByte par) { return Convert.ToUInt16(par); }
		public static UInt16 ToUInt16(SByte? par) { return Convert.ToUInt16(par.Value); }
		public static UInt16? ToUInt16(Byte par) { return Convert.ToUInt16(par); }
		public static UInt16 ToUInt16(Byte? par) { return Convert.ToUInt16(par.Value); }
		public static UInt16? ToUInt16(Int16 par) { return Convert.ToUInt16(par); }
		public static UInt16 ToUInt16(Int16? par) { return Convert.ToUInt16(par.Value); }
		public static UInt16? ToUInt16(Int32 par) { return Convert.ToUInt16(par); }
		public static UInt16 ToUInt16(Int32? par) { return Convert.ToUInt16(par.Value); }
		public static UInt16? ToUInt16(UInt16 par) { return Convert.ToUInt16(par); }
		public static UInt16 ToUInt16(UInt16? par) { return Convert.ToUInt16(par.Value); }
		public static UInt16? ToUInt16(UInt32 par) { return Convert.ToUInt16(par); }
		public static UInt16 ToUInt16(UInt32? par) { return Convert.ToUInt16(par.Value); }
		public static UInt16? ToUInt16(Int64 par) { return Convert.ToUInt16(par); }
		public static UInt16 ToUInt16(Int64? par) { return Convert.ToUInt16(par.Value); }
		public static UInt16? ToUInt16(UInt64 par) { return Convert.ToUInt16(par); }
		public static UInt16 ToUInt16(UInt64? par) { return Convert.ToUInt16(par.Value); }
		public static UInt16? ToUInt16(Single par) { return Convert.ToUInt16(par); }
		public static UInt16 ToUInt16(Single? par) { return Convert.ToUInt16(par.Value); }
		public static UInt16? ToUInt16(Double par) { return Convert.ToUInt16(par); }
		public static UInt16 ToUInt16(Double? par) { return Convert.ToUInt16(par.Value); }
		public static UInt16? ToUInt16(Decimal par) { return Convert.ToUInt16(par); }
		public static UInt16 ToUInt16(Decimal? par) { return Convert.ToUInt16(par.Value); }
		public static UInt16? ToUInt16(String par) { return par == null ? (UInt16?)null : Convert.ToUInt16(par); }
		public static UInt16? ToUInt16(DateTime par) { return Convert.ToUInt16(par); }
		public static UInt16 ToUInt16(DateTime? par) { return Convert.ToUInt16(par.Value); }
		public static Int32? ToInt32(Object par) { return par == null ? (Int32?)null : Convert.ToInt32(par); }
		public static Int32? ToInt32(Boolean par) { return Convert.ToInt32(par); }
		public static Int32 ToInt32(Boolean? par) { return Convert.ToInt32(par.Value); }
		public static Int32? ToInt32(Char par) { return Convert.ToInt32(par); }
		public static Int32 ToInt32(Char? par) { return Convert.ToInt32(par.Value); }
		public static Int32? ToInt32(SByte par) { return Convert.ToInt32(par); }
		public static Int32 ToInt32(SByte? par) { return Convert.ToInt32(par.Value); }
		public static Int32? ToInt32(Byte par) { return Convert.ToInt32(par); }
		public static Int32 ToInt32(Byte? par) { return Convert.ToInt32(par.Value); }
		public static Int32? ToInt32(Int16 par) { return Convert.ToInt32(par); }
		public static Int32 ToInt32(Int16? par) { return Convert.ToInt32(par.Value); }
		public static Int32? ToInt32(UInt16 par) { return Convert.ToInt32(par); }
		public static Int32 ToInt32(UInt16? par) { return Convert.ToInt32(par.Value); }
		public static Int32? ToInt32(UInt32 par) { return Convert.ToInt32(par); }
		public static Int32 ToInt32(UInt32? par) { return Convert.ToInt32(par.Value); }
		public static Int32? ToInt32(Int32 par) { return Convert.ToInt32(par); }
		public static Int32 ToInt32(Int32? par) { return Convert.ToInt32(par.Value); }
		public static Int32? ToInt32(Int64 par) { return Convert.ToInt32(par); }
		public static Int32 ToInt32(Int64? par) { return Convert.ToInt32(par.Value); }
		public static Int32? ToInt32(UInt64 par) { return Convert.ToInt32(par); }
		public static Int32 ToInt32(UInt64? par) { return Convert.ToInt32(par.Value); }
		public static Int32? ToInt32(Single par) { return Convert.ToInt32(par); }
		public static Int32 ToInt32(Single? par) { return Convert.ToInt32(par.Value); }
		public static Int32? ToInt32(Double par) { return Convert.ToInt32(par); }
		public static Int32 ToInt32(Double? par) { return Convert.ToInt32(par.Value); }
		public static Int32? ToInt32(Decimal par) { return Convert.ToInt32(par); }
		public static Int32 ToInt32(Decimal? par) { return Convert.ToInt32(par.Value); }
		public static Int32? ToInt32(String par) { return par == null ? (Int32?)null : Convert.ToInt32(par); }
		public static Int32? ToInt32(DateTime par) { return Convert.ToInt32(par); }
		public static Int32 ToInt32(DateTime? par) { return Convert.ToInt32(par.Value); }
		public static UInt32? ToUInt32(Object par) { return par == null ? (UInt32?)null : Convert.ToUInt32(par); }
		public static UInt32? ToUInt32(Boolean par) { return Convert.ToUInt32(par); }
		public static UInt32 ToUInt32(Boolean? par) { return Convert.ToUInt32(par.Value); }
		public static UInt32? ToUInt32(Char par) { return Convert.ToUInt32(par); }
		public static UInt32 ToUInt32(Char? par) { return Convert.ToUInt32(par.Value); }
		public static UInt32? ToUInt32(SByte par) { return Convert.ToUInt32(par); }
		public static UInt32 ToUInt32(SByte? par) { return Convert.ToUInt32(par.Value); }
		public static UInt32? ToUInt32(Byte par) { return Convert.ToUInt32(par); }
		public static UInt32 ToUInt32(Byte? par) { return Convert.ToUInt32(par.Value); }
		public static UInt32? ToUInt32(Int16 par) { return Convert.ToUInt32(par); }
		public static UInt32 ToUInt32(Int16? par) { return Convert.ToUInt32(par.Value); }
		public static UInt32? ToUInt32(UInt16 par) { return Convert.ToUInt32(par); }
		public static UInt32 ToUInt32(UInt16? par) { return Convert.ToUInt32(par.Value); }
		public static UInt32? ToUInt32(Int32 par) { return Convert.ToUInt32(par); }
		public static UInt32 ToUInt32(Int32? par) { return Convert.ToUInt32(par.Value); }
		public static UInt32? ToUInt32(UInt32 par) { return Convert.ToUInt32(par); }
		public static UInt32 ToUInt32(UInt32? par) { return Convert.ToUInt32(par.Value); }
		public static UInt32? ToUInt32(Int64 par) { return Convert.ToUInt32(par); }
		public static UInt32 ToUInt32(Int64? par) { return Convert.ToUInt32(par.Value); }
		public static UInt32? ToUInt32(UInt64 par) { return Convert.ToUInt32(par); }
		public static UInt32 ToUInt32(UInt64? par) { return Convert.ToUInt32(par.Value); }
		public static UInt32? ToUInt32(Single par) { return Convert.ToUInt32(par); }
		public static UInt32 ToUInt32(Single? par) { return Convert.ToUInt32(par.Value); }
		public static UInt32? ToUInt32(Double par) { return Convert.ToUInt32(par); }
		public static UInt32 ToUInt32(Double? par) { return Convert.ToUInt32(par.Value); }
		public static UInt32? ToUInt32(Decimal par) { return Convert.ToUInt32(par); }
		public static UInt32 ToUInt32(Decimal? par) { return Convert.ToUInt32(par.Value); }
		public static UInt32? ToUInt32(String par) { return par == null ? (UInt32?)null : Convert.ToUInt32(par); }
		public static UInt32? ToUInt32(DateTime par) { return Convert.ToUInt32(par); }
		public static UInt32 ToUInt32(DateTime? par) { return Convert.ToUInt32(par.Value); }
		public static Int64? ToInt64(Object par) { return par == null ? (Int64?)null : Convert.ToInt64(par); }
		public static Int64? ToInt64(Boolean par) { return Convert.ToInt64(par); }
		public static Int64 ToInt64(Boolean? par) { return Convert.ToInt64(par.Value); }
		public static Int64? ToInt64(Char par) { return Convert.ToInt64(par); }
		public static Int64 ToInt64(Char? par) { return Convert.ToInt64(par.Value); }
		public static Int64? ToInt64(SByte par) { return Convert.ToInt64(par); }
		public static Int64 ToInt64(SByte? par) { return Convert.ToInt64(par.Value); }
		public static Int64? ToInt64(Byte par) { return Convert.ToInt64(par); }
		public static Int64 ToInt64(Byte? par) { return Convert.ToInt64(par.Value); }
		public static Int64? ToInt64(Int16 par) { return Convert.ToInt64(par); }
		public static Int64 ToInt64(Int16? par) { return Convert.ToInt64(par.Value); }
		public static Int64? ToInt64(UInt16 par) { return Convert.ToInt64(par); }
		public static Int64 ToInt64(UInt16? par) { return Convert.ToInt64(par.Value); }
		public static Int64? ToInt64(Int32 par) { return Convert.ToInt64(par); }
		public static Int64 ToInt64(Int32? par) { return Convert.ToInt64(par.Value); }
		public static Int64? ToInt64(UInt32 par) { return Convert.ToInt64(par); }
		public static Int64 ToInt64(UInt32? par) { return Convert.ToInt64(par.Value); }
		public static Int64? ToInt64(UInt64 par) { return Convert.ToInt64(par); }
		public static Int64 ToInt64(UInt64? par) { return Convert.ToInt64(par.Value); }
		public static Int64? ToInt64(Int64 par) { return Convert.ToInt64(par); }
		public static Int64 ToInt64(Int64? par) { return Convert.ToInt64(par.Value); }
		public static Int64? ToInt64(Single par) { return Convert.ToInt64(par); }
		public static Int64 ToInt64(Single? par) { return Convert.ToInt64(par.Value); }
		public static Int64? ToInt64(Double par) { return Convert.ToInt64(par); }
		public static Int64 ToInt64(Double? par) { return Convert.ToInt64(par.Value); }
		public static Int64? ToInt64(Decimal par) { return Convert.ToInt64(par); }
		public static Int64 ToInt64(Decimal? par) { return Convert.ToInt64(par.Value); }
		public static Int64? ToInt64(String par) { return par == null ? (Int64?)null : Convert.ToInt64(par); }
		public static Int64? ToInt64(DateTime par) { return Convert.ToInt64(par); }
		public static Int64 ToInt64(DateTime? par) { return Convert.ToInt64(par.Value); }
		public static UInt64? ToUInt64(Object par) { return par == null ? (UInt64?)null : Convert.ToUInt64(par); }
		public static UInt64? ToUInt64(Boolean par) { return Convert.ToUInt64(par); }
		public static UInt64 ToUInt64(Boolean? par) { return Convert.ToUInt64(par.Value); }
		public static UInt64? ToUInt64(Char par) { return Convert.ToUInt64(par); }
		public static UInt64 ToUInt64(Char? par) { return Convert.ToUInt64(par.Value); }
		public static UInt64? ToUInt64(SByte par) { return Convert.ToUInt64(par); }
		public static UInt64 ToUInt64(SByte? par) { return Convert.ToUInt64(par.Value); }
		public static UInt64? ToUInt64(Byte par) { return Convert.ToUInt64(par); }
		public static UInt64 ToUInt64(Byte? par) { return Convert.ToUInt64(par.Value); }
		public static UInt64? ToUInt64(Int16 par) { return Convert.ToUInt64(par); }
		public static UInt64 ToUInt64(Int16? par) { return Convert.ToUInt64(par.Value); }
		public static UInt64? ToUInt64(UInt16 par) { return Convert.ToUInt64(par); }
		public static UInt64 ToUInt64(UInt16? par) { return Convert.ToUInt64(par.Value); }
		public static UInt64? ToUInt64(Int32 par) { return Convert.ToUInt64(par); }
		public static UInt64 ToUInt64(Int32? par) { return Convert.ToUInt64(par.Value); }
		public static UInt64? ToUInt64(UInt32 par) { return Convert.ToUInt64(par); }
		public static UInt64 ToUInt64(UInt32? par) { return Convert.ToUInt64(par.Value); }
		public static UInt64? ToUInt64(Int64 par) { return Convert.ToUInt64(par); }
		public static UInt64 ToUInt64(Int64? par) { return Convert.ToUInt64(par.Value); }
		public static UInt64? ToUInt64(UInt64 par) { return Convert.ToUInt64(par); }
		public static UInt64 ToUInt64(UInt64? par) { return Convert.ToUInt64(par.Value); }
		public static UInt64? ToUInt64(Single par) { return Convert.ToUInt64(par); }
		public static UInt64 ToUInt64(Single? par) { return Convert.ToUInt64(par.Value); }
		public static UInt64? ToUInt64(Double par) { return Convert.ToUInt64(par); }
		public static UInt64 ToUInt64(Double? par) { return Convert.ToUInt64(par.Value); }
		public static UInt64? ToUInt64(Decimal par) { return Convert.ToUInt64(par); }
		public static UInt64 ToUInt64(Decimal? par) { return Convert.ToUInt64(par.Value); }
		public static UInt64? ToUInt64(String par) { return par == null ? (UInt64?)null : Convert.ToUInt64(par); }
		public static UInt64? ToUInt64(DateTime par) { return Convert.ToUInt64(par); }
		public static UInt64 ToUInt64(DateTime? par) { return Convert.ToUInt64(par.Value); }
		public static Single? ToSingle(Object par) { return par == null ? (Single?)null : Convert.ToSingle(par); }
		public static Single? ToSingle(SByte par) { return Convert.ToSingle(par); }
		public static Single ToSingle(SByte? par) { return Convert.ToSingle(par.Value); }
		public static Single? ToSingle(Byte par) { return Convert.ToSingle(par); }
		public static Single ToSingle(Byte? par) { return Convert.ToSingle(par.Value); }
		public static Single? ToSingle(Char par) { return Convert.ToSingle(par); }
		public static Single ToSingle(Char? par) { return Convert.ToSingle(par.Value); }
		public static Single? ToSingle(Int16 par) { return Convert.ToSingle(par); }
		public static Single ToSingle(Int16? par) { return Convert.ToSingle(par.Value); }
		public static Single? ToSingle(UInt16 par) { return Convert.ToSingle(par); }
		public static Single ToSingle(UInt16? par) { return Convert.ToSingle(par.Value); }
		public static Single? ToSingle(Int32 par) { return Convert.ToSingle(par); }
		public static Single ToSingle(Int32? par) { return Convert.ToSingle(par.Value); }
		public static Single? ToSingle(UInt32 par) { return Convert.ToSingle(par); }
		public static Single ToSingle(UInt32? par) { return Convert.ToSingle(par.Value); }
		public static Single? ToSingle(Int64 par) { return Convert.ToSingle(par); }
		public static Single ToSingle(Int64? par) { return Convert.ToSingle(par.Value); }
		public static Single? ToSingle(UInt64 par) { return Convert.ToSingle(par); }
		public static Single ToSingle(UInt64? par) { return Convert.ToSingle(par.Value); }
		public static Single? ToSingle(Single par) { return Convert.ToSingle(par); }
		public static Single ToSingle(Single? par) { return Convert.ToSingle(par.Value); }
		public static Single? ToSingle(Double par) { return Convert.ToSingle(par); }
		public static Single ToSingle(Double? par) { return Convert.ToSingle(par.Value); }
		public static Single? ToSingle(Decimal par) { return Convert.ToSingle(par); }
		public static Single ToSingle(Decimal? par) { return Convert.ToSingle(par.Value); }
		public static Single? ToSingle(String par) { return par == null ? (Single?)null : Convert.ToSingle(par); }
		public static Single? ToSingle(Boolean par) { return Convert.ToSingle(par); }
		public static Single ToSingle(Boolean? par) { return Convert.ToSingle(par.Value); }
		public static Single? ToSingle(DateTime par) { return Convert.ToSingle(par); }
		public static Single ToSingle(DateTime? par) { return Convert.ToSingle(par.Value); }
		public static Double? ToDouble(Object par) { return par == null ? (Double?)null : Convert.ToDouble(par); }
		public static Double? ToDouble(SByte par) { return Convert.ToDouble(par); }
		public static Double ToDouble(SByte? par) { return Convert.ToDouble(par.Value); }
		public static Double? ToDouble(Byte par) { return Convert.ToDouble(par); }
		public static Double ToDouble(Byte? par) { return Convert.ToDouble(par.Value); }
		public static Double? ToDouble(Int16 par) { return Convert.ToDouble(par); }
		public static Double ToDouble(Int16? par) { return Convert.ToDouble(par.Value); }
		public static Double? ToDouble(Char par) { return Convert.ToDouble(par); }
		public static Double ToDouble(Char? par) { return Convert.ToDouble(par.Value); }
		public static Double? ToDouble(UInt16 par) { return Convert.ToDouble(par); }
		public static Double ToDouble(UInt16? par) { return Convert.ToDouble(par.Value); }
		public static Double? ToDouble(Int32 par) { return Convert.ToDouble(par); }
		public static Double ToDouble(Int32? par) { return Convert.ToDouble(par.Value); }
		public static Double? ToDouble(UInt32 par) { return Convert.ToDouble(par); }
		public static Double ToDouble(UInt32? par) { return Convert.ToDouble(par.Value); }
		public static Double? ToDouble(Int64 par) { return Convert.ToDouble(par); }
		public static Double ToDouble(Int64? par) { return Convert.ToDouble(par.Value); }
		public static Double? ToDouble(UInt64 par) { return Convert.ToDouble(par); }
		public static Double ToDouble(UInt64? par) { return Convert.ToDouble(par.Value); }
		public static Double? ToDouble(Single par) { return Convert.ToDouble(par); }
		public static Double ToDouble(Single? par) { return Convert.ToDouble(par.Value); }
		public static Double? ToDouble(Double par) { return Convert.ToDouble(par); }
		public static Double ToDouble(Double? par) { return Convert.ToDouble(par.Value); }
		public static Double? ToDouble(Decimal par) { return Convert.ToDouble(par); }
		public static Double ToDouble(Decimal? par) { return Convert.ToDouble(par.Value); }
		public static Double? ToDouble(String par) { return par == null ? (Double?)null : Convert.ToDouble(par); }
		public static Double? ToDouble(Boolean par) { return Convert.ToDouble(par); }
		public static Double ToDouble(Boolean? par) { return Convert.ToDouble(par.Value); }
		public static Double? ToDouble(DateTime par) { return Convert.ToDouble(par); }
		public static Double ToDouble(DateTime? par) { return Convert.ToDouble(par.Value); }
		public static Decimal? ToDecimal(Object par) { return par == null ? (Decimal?)null : Convert.ToDecimal(par); }
		public static Decimal? ToDecimal(SByte par) { return Convert.ToDecimal(par); }
		public static Decimal ToDecimal(SByte? par) { return Convert.ToDecimal(par.Value); }
		public static Decimal? ToDecimal(Byte par) { return Convert.ToDecimal(par); }
		public static Decimal ToDecimal(Byte? par) { return Convert.ToDecimal(par.Value); }
		public static Decimal? ToDecimal(Char par) { return Convert.ToDecimal(par); }
		public static Decimal ToDecimal(Char? par) { return Convert.ToDecimal(par.Value); }
		public static Decimal? ToDecimal(Int16 par) { return Convert.ToDecimal(par); }
		public static Decimal ToDecimal(Int16? par) { return Convert.ToDecimal(par.Value); }
		public static Decimal? ToDecimal(UInt16 par) { return Convert.ToDecimal(par); }
		public static Decimal ToDecimal(UInt16? par) { return Convert.ToDecimal(par.Value); }
		public static Decimal? ToDecimal(Int32 par) { return Convert.ToDecimal(par); }
		public static Decimal ToDecimal(Int32? par) { return Convert.ToDecimal(par.Value); }
		public static Decimal? ToDecimal(UInt32 par) { return Convert.ToDecimal(par); }
		public static Decimal ToDecimal(UInt32? par) { return Convert.ToDecimal(par.Value); }
		public static Decimal? ToDecimal(Int64 par) { return Convert.ToDecimal(par); }
		public static Decimal ToDecimal(Int64? par) { return Convert.ToDecimal(par.Value); }
		public static Decimal? ToDecimal(UInt64 par) { return Convert.ToDecimal(par); }
		public static Decimal ToDecimal(UInt64? par) { return Convert.ToDecimal(par.Value); }
		public static Decimal? ToDecimal(Single par) { return Convert.ToDecimal(par); }
		public static Decimal ToDecimal(Single? par) { return Convert.ToDecimal(par.Value); }
		public static Decimal? ToDecimal(Double par) { return Convert.ToDecimal(par); }
		public static Decimal ToDecimal(Double? par) { return Convert.ToDecimal(par.Value); }
		public static Decimal? ToDecimal(String par) { return par == null ? (Decimal?)null : Convert.ToDecimal(par); }
		public static Decimal? ToDecimal(Decimal par) { return Convert.ToDecimal(par); }
		public static Decimal ToDecimal(Decimal? par) { return Convert.ToDecimal(par.Value); }
		public static Decimal? ToDecimal(Boolean par) { return Convert.ToDecimal(par); }
		public static Decimal ToDecimal(Boolean? par) { return Convert.ToDecimal(par.Value); }
		public static Decimal? ToDecimal(DateTime par) { return Convert.ToDecimal(par); }
		public static Decimal ToDecimal(DateTime? par) { return Convert.ToDecimal(par.Value); }
		public static DateTime? ToDateTime(DateTime par) { return Convert.ToDateTime(par); }
		public static DateTime ToDateTime(DateTime? par) { return Convert.ToDateTime(par.Value); }
		public static DateTime? ToDateTime(Object par) { return par == null ? (DateTime?)null : Convert.ToDateTime(par); }
		public static DateTime? ToDateTime(String par) { return par == null ? (DateTime?)null : Convert.ToDateTime(par); }
		public static DateTime? ToDateTime(SByte par) { return Convert.ToDateTime(par); }
		public static DateTime ToDateTime(SByte? par) { return Convert.ToDateTime(par.Value); }
		public static DateTime? ToDateTime(Byte par) { return Convert.ToDateTime(par); }
		public static DateTime ToDateTime(Byte? par) { return Convert.ToDateTime(par.Value); }
		public static DateTime? ToDateTime(Int16 par) { return Convert.ToDateTime(par); }
		public static DateTime ToDateTime(Int16? par) { return Convert.ToDateTime(par.Value); }
		public static DateTime? ToDateTime(UInt16 par) { return Convert.ToDateTime(par); }
		public static DateTime ToDateTime(UInt16? par) { return Convert.ToDateTime(par.Value); }
		public static DateTime? ToDateTime(Int32 par) { return Convert.ToDateTime(par); }
		public static DateTime ToDateTime(Int32? par) { return Convert.ToDateTime(par.Value); }
		public static DateTime? ToDateTime(UInt32 par) { return Convert.ToDateTime(par); }
		public static DateTime ToDateTime(UInt32? par) { return Convert.ToDateTime(par.Value); }
		public static DateTime? ToDateTime(Int64 par) { return Convert.ToDateTime(par); }
		public static DateTime ToDateTime(Int64? par) { return Convert.ToDateTime(par.Value); }
		public static DateTime? ToDateTime(UInt64 par) { return Convert.ToDateTime(par); }
		public static DateTime ToDateTime(UInt64? par) { return Convert.ToDateTime(par.Value); }
		public static DateTime? ToDateTime(Boolean par) { return Convert.ToDateTime(par); }
		public static DateTime ToDateTime(Boolean? par) { return Convert.ToDateTime(par.Value); }
		public static DateTime? ToDateTime(Char par) { return Convert.ToDateTime(par); }
		public static DateTime ToDateTime(Char? par) { return Convert.ToDateTime(par.Value); }
		public static DateTime? ToDateTime(Single par) { return Convert.ToDateTime(par); }
		public static DateTime ToDateTime(Single? par) { return Convert.ToDateTime(par.Value); }
		public static DateTime? ToDateTime(Double par) { return Convert.ToDateTime(par); }
		public static DateTime ToDateTime(Double? par) { return Convert.ToDateTime(par.Value); }
		public static DateTime? ToDateTime(Decimal par) { return Convert.ToDateTime(par); }
		public static DateTime ToDateTime(Decimal? par) { return Convert.ToDateTime(par.Value); }
		public static String ToString(Boolean? par) { return par == null ? (String)null : Convert.ToString(par.Value); }
		public static String ToString(Char? par) { return par == null ? (String)null : Convert.ToString(par.Value); }
		public static String ToString(SByte? par) { return par == null ? (String)null : Convert.ToString(par.Value); }
		public static String ToString(Byte? par) { return par == null ? (String)null : Convert.ToString(par.Value); }
		public static String ToString(Int16? par) { return par == null ? (String)null : Convert.ToString(par.Value); }
		public static String ToString(UInt16? par) { return par == null ? (String)null : Convert.ToString(par.Value); }
		public static String ToString(Int32? par) { return par == null ? (String)null : Convert.ToString(par.Value); }
		public static String ToString(UInt32? par) { return par == null ? (String)null : Convert.ToString(par.Value); }
		public static String ToString(Int64? par) { return par == null ? (String)null : Convert.ToString(par.Value); }
		public static String ToString(UInt64? par) { return par == null ? (String)null : Convert.ToString(par.Value); }
		public static String ToString(Single? par) { return par == null ? (String)null : Convert.ToString(par.Value); }
		public static String ToString(Double? par) { return par == null ? (String)null : Convert.ToString(par.Value); }
		public static String ToString(Decimal? par) { return par == null ? (String)null : Convert.ToString(par.Value); }
		public static String ToString(DateTime? par) { return par == null ? (String)null : Convert.ToString(par.Value); }

	}
}
